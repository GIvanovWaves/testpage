{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["config","wxUrl","nodeUrl","currentProviderWeb","ProviderWeb","currentProviderCloud","ProviderCloud","currentProviderKeeper","ProviderKeeper","currentProviderLedger","ProviderLedger","signerWeb","Signer","NODE_URL","signerCloud","signerKeeper","signerLedger","testsend","signer","transfer","amount","recipient","broadcast","testsend_btc","assetId","testsend_waves","fee","feeAssetId","testinvoke","invoke","dApp","payment","call","function","args","type","value","testinvoke_waves","testsimpleinvoke","setProvider","SignerLoginElement","props","state","address","login","bind","this","testlogin","then","res","rej","setState","provider","onClick","React","Component","TestButtonsComponent","buttonName","testFunction","SignButtonComponent","status","clickHandle","catch","message","toString","console","log","Array","isArray","ids","id","ConfigElement","currentWxUrl","currentNodeUrl","handleChange","setProviders","event","target","name","style","width","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd5d545e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Signer } from \"@waves/signer\";\r\nimport { ProviderWeb } from \"@waves.exchange/provider-web\";\r\nimport { ProviderCloud } from \"@waves.exchange/provider-cloud\";\r\nimport { ProviderKeeper } from \"@waves/provider-keeper\";\r\nimport { ProviderLedger } from \"@waves/provider-ledger\";\r\n\r\nvar config = {\r\n  wxUrl: \"https://wallet-stage2.waves.exchange\",\r\n  nodeUrl: \"https://nodes-testnet.wavesnodes.com\",\r\n};\r\n\r\nvar currentProviderWeb = new ProviderWeb(config.wxUrl + \"/signer/\");\r\nvar currentProviderCloud = new ProviderCloud(config.wxUrl + \"/signer-cloud/\");\r\nvar currentProviderKeeper = new ProviderKeeper();\r\nvar currentProviderLedger = new ProviderLedger();\r\n\r\nvar signerWeb = new Signer({\r\n  NODE_URL: config.nodeUrl,\r\n});\r\n\r\nvar signerCloud = new Signer({\r\n  NODE_URL: config.nodeUrl,\r\n});\r\n\r\nvar signerKeeper = new Signer({\r\n  NODE_URL: config.nodeUrl,\r\n});\r\n\r\nvar signerLedger = new Signer({\r\n  NODE_URL: config.nodeUrl,\r\n});\r\n\r\nsignerWeb.setProvider(currentProviderWeb);\r\nsignerCloud.setProvider(currentProviderCloud);\r\nsignerKeeper.setProvider(currentProviderKeeper);\r\nsignerLedger.setProvider(currentProviderLedger);\r\n\r\nfunction changeProviderUrl(wxUrl, nodeUrl) {\r\n  config.wxUrl = wxUrl;\r\n  config.nodeUrl = nodeUrl;\r\n  currentProviderWeb = new ProviderWeb(wxUrl + \"/signer\");\r\n  currentProviderCloud = new ProviderCloud(wxUrl + \"/signer-cloud/\");\r\n  signerWeb.setProvider(currentProviderWeb);\r\n  signerCloud.setProvider(currentProviderCloud);\r\n  signerKeeper.setProvider(currentProviderKeeper);\r\n  signerLedger.setProvider(currentProviderLedger);\r\n}\r\n\r\nfunction testlogin(signer) {\r\n  return signer.login();\r\n}\r\n\r\nfunction testsend(signer) {\r\n  return signer\r\n    .transfer({\r\n      amount: 100,\r\n      recipient: \"alias:T:merry\",\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testsend_btc(signer) {\r\n  return signer\r\n    .transfer({\r\n      amount: 1,\r\n      assetId: \"DWgwcZTMhSvnyYCoWLRUXXSH1RSkzThXLJhww9gwkqdn\",\r\n      recipient: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testsend_waves(signer) {\r\n  return signer\r\n    .transfer({\r\n      assetId: \"WAVES\",\r\n      amount: 101,\r\n      recipient: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      fee: 100001,\r\n      feeAssetId: \"WAVES\",\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testinvoke(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      payment: [\r\n        {\r\n          assetId: null,\r\n          amount: 5,\r\n        },\r\n        {\r\n          assetId: \"25FEqEjRkqK6yCkiT7Lz6SAYz7gUFCtxfCChnrVFD5AT\",\r\n          amount: 4,\r\n        },\r\n        {\r\n          assetId: \"5Sh9KghfkZyhjwuodovDhB6PghDUGBHiAPZ4MkrPgKtX\",\r\n          amount: 3,\r\n        },\r\n        {\r\n          assetId: \"DWgwcZTMhSvnyYCoWLRUXXSH1RSkzThXLJhww9gwkqdn\",\r\n          amount: 2,\r\n        },\r\n        {\r\n          assetId: \"EmcmfM27TPaemhuREZGD8WLvsuLCdqx8WovMrDQKbXS1\",\r\n          amount: 1,\r\n        },\r\n      ],\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testinvoke_waves(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      fee: 500001,\r\n      feeAssetId: \"WAVES\",\r\n      payment: [\r\n        {\r\n          assetId: \"WAVES\",\r\n          amount: 1,\r\n        },\r\n        {\r\n          assetId: \"25FEqEjRkqK6yCkiT7Lz6SAYz7gUFCtxfCChnrVFD5AT\",\r\n          amount: 2,\r\n        },\r\n        {\r\n          assetId: \"5Sh9KghfkZyhjwuodovDhB6PghDUGBHiAPZ4MkrPgKtX\",\r\n          amount: 3,\r\n        },\r\n      ],\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testsimpleinvoke(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nclass SignerLoginElement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  login() {\r\n    var signer = this.props.signer;\r\n    if (signer !== \"\") {\r\n      testlogin(signer).then((res, rej) => {\r\n        this.setState({\r\n          address: res.address,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4> Provider {this.props.provider} </h4>{\" \"}\r\n        <div> Address: {this.state.address} </div>{\" \"}\r\n        <button onClick={this.login}> Login {this.props.provider} </button>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TestButtonsComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Transfer\"\r\n          testFunction={testsend}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Transfer BTC\"\r\n          testFunction={testsend_btc}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Transfer with WAVES as AssetID\"\r\n          testFunction={testsend_waves}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke\"\r\n          testFunction={testinvoke}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke with WAVES as AssetID\"\r\n          testFunction={testinvoke_waves}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke without payments\"\r\n          testFunction={testsimpleinvoke}\r\n        />{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignButtonComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: \"\",\r\n    };\r\n\r\n    this.clickHandle = this.clickHandle.bind(this);\r\n  }\r\n\r\n  clickHandle() {\r\n    return this.props\r\n      .testFunction(this.props.signer)\r\n      .catch((rej) => {\r\n        this.setState({\r\n          status: rej.message.toString(),\r\n        });\r\n      })\r\n      .then((res, rej) => {\r\n        if (res) {\r\n          console.log(res); // For debugging in console\r\n          if (Array.isArray(res)) {\r\n            var ids = \"\";\r\n            for (var tx of res) {\r\n              ids = tx.id.toString() + \" \";\r\n              this.setState({\r\n                status: ids,\r\n              });\r\n            }\r\n          } else {\r\n            this.setState({\r\n              status: res.id.toString(),\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.clickHandle}> {this.props.buttonName} </button>{\" \"}\r\n        <div> {this.state.status} </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConfigElement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      wxUrl: config.wxUrl,\r\n      nodeUrl: config.nodeUrl,\r\n      currentWxUrl: config.wxUrl,\r\n      currentNodeUrl: config.nodeUrl,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setProviders = this.setProviders.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  setProviders(event) {\r\n    changeProviderUrl(this.state.wxUrl, this.state.nodeUrl);\r\n    this.setState({\r\n      currentWxUrl: this.state.wxUrl,\r\n    });\r\n    this.setState({\r\n      currentNodeUrl: this.state.nodeUrl,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4> Current WX: {this.state.currentWxUrl} </h4>{\" \"}\r\n        <h4> Current Node: {this.state.currentNodeUrl} </h4>{\" \"}\r\n        <div>\r\n          WX URL:\r\n          <input\r\n            name=\"wxUrl\"\r\n            type=\"text\"\r\n            style={{\r\n              width: 300,\r\n            }}\r\n            value={this.state.wxUrl}\r\n            onChange={this.handleChange}\r\n          />{\" \"}\r\n        </div>{\" \"}\r\n        <div>\r\n          NODE URL:\r\n          <input\r\n            name=\"nodeUrl\"\r\n            type=\"text\"\r\n            style={{\r\n              width: 300,\r\n            }}\r\n            value={this.state.nodeUrl}\r\n            onChange={this.handleChange}\r\n          />{\" \"}\r\n        </div>{\" \"}\r\n        <button onClick={this.setProviders}> Set </button>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <ConfigElement config={config} /> <br />\r\n      <SignerLoginElement provider=\"WEB\" signer={signerWeb} />\r\n      <br />\r\n      <TestButtonsComponent signer={signerWeb} /> <br />\r\n      <SignerLoginElement provider=\"CLOUD\" signer={signerCloud} />\r\n      <br />\r\n      <TestButtonsComponent signer={signerCloud} /> <br />\r\n      <SignerLoginElement provider=\"KEEPER\" signer={signerKeeper} />\r\n      <br />\r\n      <TestButtonsComponent signer={signerKeeper} /> <br />\r\n      <SignerLoginElement provider=\"LEDGER\" signer={signerLedger} />\r\n      <br />\r\n      <TestButtonsComponent signer={signerLedger} />{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}