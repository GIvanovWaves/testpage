{"version":3,"sources":["App.js","index.js"],"names":["currentProviderWeb","currentProviderCloud","currentProviderKeeper","currentProviderLedger","currentProviderMetamask","signerWeb","signerCloud","signerKeeper","signerLedger","signerMetamask","config","wxUrl","nodeUrl","changeProviderUrl","ProviderWeb","ProviderCloud","ProviderKeeper","ProviderLedger","ProviderMetamask","wavesConfig","chainId","charCodeAt","Signer","NODE_URL","setProvider","testsend","signer","transfer","amount","recipient","broadcast","testsend_btc","assetId","testsend_waves","fee","feeAssetId","testinvoke","invoke","dApp","payment","call","function","args","type","value","testinvoke_waves","testsimpleinvoke","SignerLoginElement","props","state","address","login","bind","this","testlogin","then","res","rej","setState","provider","_options","toString","currentProvider","_clientUrl","onClick","React","Component","TestButtonsComponent","buttonName","testFunction","SignButtonComponent","status","clickHandle","catch","console","log","message","status_text","Array","isArray","id","ConfigElement","currentWxUrl","currentNodeUrl","handleChange","setProviders","event","target","name","changeSigner","style","width","onChange","PageComponent","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05520a84.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Signer } from \"@waves/signer\";\r\nimport { ProviderWeb } from \"@waves.exchange/provider-web\";\r\nimport { ProviderCloud } from \"@waves.exchange/provider-cloud\";\r\nimport { ProviderKeeper } from \"@waves/provider-keeper\";\r\nimport { ProviderLedger } from \"@waves/provider-ledger\";\r\nimport { ProviderMetamask} from \"@waves/provider-metamask\";\r\n\r\nvar config = {\r\n  wxUrl: \"https://testnet.waves.exchange\",\r\n  nodeUrl: \"https://nodes-testnet.wavesnodes.com\",\r\n};\r\n\r\nvar currentProviderWeb;\r\nvar currentProviderCloud;\r\nvar currentProviderKeeper;\r\nvar currentProviderLedger;\r\nvar currentProviderMetamask;\r\n\r\nvar signerWeb;\r\nvar signerCloud;\r\nvar signerKeeper;\r\nvar signerLedger;\r\nvar signerMetamask;\r\n\r\nchangeProviderUrl(config.wxUrl, config.nodeUrl);\r\n\r\nfunction changeProviderUrl(wxUrl, nodeUrl) {\r\n  config.wxUrl = wxUrl;\r\n  config.nodeUrl = nodeUrl;\r\n\r\n  currentProviderWeb    = new ProviderWeb(wxUrl + \"/signer\");\r\n  currentProviderCloud  = new ProviderCloud(wxUrl + \"/signer-cloud\");\r\n  currentProviderKeeper = new ProviderKeeper();\r\n  currentProviderLedger = new ProviderLedger();\r\n  currentProviderMetamask = new ProviderMetamask({\r\n       wavesConfig: {\r\n           nodeUrl: config.nodeUrl,\r\n           chainId: 'T'.charCodeAt(0)\r\n       }\r\n  });\r\n\r\n  signerWeb = new Signer({\r\n    NODE_URL: config.nodeUrl,\r\n  });\r\n\r\n  signerCloud = new Signer({\r\n    NODE_URL: config.nodeUrl,\r\n  });\r\n\r\n  signerKeeper = new Signer({\r\n    NODE_URL: config.nodeUrl,\r\n  });\r\n\r\n  signerLedger = new Signer({\r\n    NODE_URL: config.nodeUrl,\r\n  });\r\n\r\n  signerMetamask = new Signer({\r\n    NODE_URL: config.nodeUrl,\r\n  });\r\n\r\n  signerWeb.setProvider(currentProviderWeb);\r\n  signerCloud.setProvider(currentProviderCloud);\r\n  signerKeeper.setProvider(currentProviderKeeper);\r\n  signerLedger.setProvider(currentProviderLedger);\r\n  signerMetamask.setProvider(currentProviderMetamask);\r\n}\r\n\r\nfunction testlogin(signer) {\r\n  return signer.login();\r\n}\r\n\r\nfunction testsend(signer) {\r\n  return signer\r\n    .transfer({\r\n      amount: 100,\r\n      recipient: \"alias:T:merry\",\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testsend_btc(signer) {\r\n  return signer\r\n    .transfer({\r\n      amount: 1,\r\n      assetId: \"DWgwcZTMhSvnyYCoWLRUXXSH1RSkzThXLJhww9gwkqdn\",\r\n      recipient: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testsend_waves(signer) {\r\n  return signer\r\n    .transfer({\r\n      assetId: \"WAVES\",\r\n      amount: 101,\r\n      recipient: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      fee: 100001,\r\n      feeAssetId: \"WAVES\",\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testinvoke(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      payment: [\r\n        {\r\n          assetId: null,\r\n          amount: 5,\r\n        },\r\n        {\r\n          assetId: \"25FEqEjRkqK6yCkiT7Lz6SAYz7gUFCtxfCChnrVFD5AT\",\r\n          amount: 4,\r\n        },\r\n        {\r\n          assetId: \"5Sh9KghfkZyhjwuodovDhB6PghDUGBHiAPZ4MkrPgKtX\",\r\n          amount: 3,\r\n        },\r\n        {\r\n          assetId: \"DWgwcZTMhSvnyYCoWLRUXXSH1RSkzThXLJhww9gwkqdn\",\r\n          amount: 2,\r\n        },\r\n        {\r\n          assetId: \"EmcmfM27TPaemhuREZGD8WLvsuLCdqx8WovMrDQKbXS1\",\r\n          amount: 1,\r\n        },\r\n      ],\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testinvoke_waves(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      fee: 500001,\r\n      feeAssetId: \"WAVES\",\r\n      payment: [\r\n        {\r\n          assetId: \"WAVES\",\r\n          amount: 1,\r\n        },\r\n        {\r\n          assetId: \"25FEqEjRkqK6yCkiT7Lz6SAYz7gUFCtxfCChnrVFD5AT\",\r\n          amount: 2,\r\n        },\r\n        {\r\n          assetId: \"5Sh9KghfkZyhjwuodovDhB6PghDUGBHiAPZ4MkrPgKtX\",\r\n          amount: 3,\r\n        },\r\n      ],\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testsimpleinvoke(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nclass SignerLoginElement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  login() {\r\n    var signer = this.props.signer;\r\n    if (signer !== \"\") {\r\n      testlogin(signer).then((res, rej) => {\r\n        this.setState({\r\n          address: res.address,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4> Provider {this.props.provider} </h4>\r\n        <div> Address: {this.state.address} </div>\r\n        <div> NODE_URL: {this.props.signer._options.NODE_URL.toString()} </div>\r\n        <div> PROVIDER_URL: {\r\n            this.props.signer.currentProvider._clientUrl ?\r\n            this.props.signer.currentProvider._clientUrl.toString() : \"\"}\r\n        </div>\r\n        <button onClick={this.login}> Login {this.props.provider} </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TestButtonsComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Transfer\"\r\n          testFunction={testsend}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Transfer BTC\"\r\n          testFunction={testsend_btc}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Transfer with WAVES as AssetID\"\r\n          testFunction={testsend_waves}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke\"\r\n          testFunction={testinvoke}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke with WAVES as AssetID\"\r\n          testFunction={testinvoke_waves}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke without payments\"\r\n          testFunction={testsimpleinvoke}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignButtonComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: \"\",\r\n    };\r\n\r\n    this.clickHandle = this.clickHandle.bind(this);\r\n  }\r\n\r\n  clickHandle() {\r\n    return this.props\r\n      .testFunction(this.props.signer)\r\n      .catch((rej) => {\r\n        console.log(rej); // For debugging in console\r\n\r\n        this.setState({\r\n          status: rej.message ? rej.message.toString() : rej.toString(),\r\n        });\r\n      })\r\n      .then((res, rej) => {\r\n        if (res) {\r\n          console.log(res); // For debugging in console\r\n\r\n          var status_text = \"\";\r\n          if (Array.isArray(res)) {\r\n            for (var tx of res) {\r\n              status_text += tx.id.toString() + \"\\n\";\r\n            }\r\n          } else {\r\n            status_text = res.id.toString() + \"\\n\";\r\n          }\r\n\r\n          this.setState({\r\n            status: status_text,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.clickHandle}> {this.props.buttonName} </button>\r\n        <div> {this.state.status} </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConfigElement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      wxUrl: config.wxUrl,\r\n      nodeUrl: config.nodeUrl,\r\n      currentWxUrl: config.wxUrl,\r\n      currentNodeUrl: config.nodeUrl,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setProviders = this.setProviders.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  setProviders(event) {\r\n    changeProviderUrl(this.state.wxUrl, this.state.nodeUrl);\r\n\r\n    this.props.changeSigner();\r\n\r\n    this.setState({\r\n      currentWxUrl: this.state.wxUrl,\r\n      currentNodeUrl: this.state.nodeUrl\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4> Current WX: {this.state.currentWxUrl} </h4>\r\n        <h4> Current Node: {this.state.currentNodeUrl} </h4>\r\n        <div>\r\n          WX URL:\r\n          <input\r\n            name=\"wxUrl\"\r\n            type=\"text\"\r\n            style={{\r\n              width: 300,\r\n            }}\r\n            value={this.state.wxUrl}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          NODE URL:\r\n          <input\r\n            name=\"nodeUrl\"\r\n            type=\"text\"\r\n            style={{\r\n              width: 300,\r\n            }}\r\n            value={this.state.nodeUrl}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <button onClick={this.setProviders}> Set </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PageComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signerWeb: signerWeb,\r\n      signerCloud: signerCloud,\r\n      signerKeeper: signerKeeper,\r\n      signerLedger: signerLedger,\r\n      signerMetamask: signerMetamask,\r\n    };\r\n\r\n    this.changeSigner = this.changeSigner.bind(this);\r\n  }\r\n\r\n  changeSigner(event) {\r\n    this.setState({\r\n      signerWeb: signerWeb,\r\n      signerCloud: signerCloud,\r\n      signerKeeper: signerKeeper,\r\n      signerLedger: signerLedger,\r\n      signerMetamask: signerMetamask,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ConfigElement config={config} changeSigner={this.changeSigner} />\r\n        <br />\r\n        <SignerLoginElement\r\n          provider=\"WEB\" \r\n          signer={this.state.signerWeb}\r\n        />\r\n        <br />\r\n        <TestButtonsComponent signer={this.state.signerWeb} /> <br />\r\n        <SignerLoginElement \r\n          provider=\"CLOUD\" \r\n          signer={this.state.signerCloud}\r\n        />\r\n        <br />\r\n        <TestButtonsComponent signer={this.state.signerCloud} /> <br />\r\n        <SignerLoginElement\r\n          provider=\"KEEPER\"\r\n          signer={this.state.signerKeeper}\r\n        />\r\n        <br />\r\n        <TestButtonsComponent signer={this.state.signerKeeper} /> <br />\r\n        <SignerLoginElement\r\n          provider=\"LEDGER\"\r\n          signer={this.state.signerLedger}\r\n        />\r\n        <br />\r\n        <TestButtonsComponent signer={this.state.signerLedger} /> <br />\r\n        <SignerLoginElement\r\n          provider=\"METAMASK\"\r\n          signer={this.state.signerMetamask}\r\n        />\r\n        <br />\r\n        <TestButtonsComponent signer={this.state.signerMetamask} /> <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <PageComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}