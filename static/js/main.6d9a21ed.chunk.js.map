{"version":3,"sources":["App.js","index.js"],"names":["currentProviderWeb","currentProviderCloud","currentProviderKeeper","currentProviderLedger","currentProviderMetamask","signerWeb","signerCloud","signerKeeper","signerLedger","signerMetamask","config","wxUrl","nodeUrl","changeProviderUrl","ProviderWeb","ProviderCloud","ProviderKeeper","ProviderLedger","ProviderMetamask","wavesConfig","chainId","charCodeAt","Signer","NODE_URL","setProvider","sendToAddress","signer","params","transfer","amount","recipient","address","assetId","broadcast","testsend","testsend_btc","testsend_waves","fee","feeAssetId","testinvoke","invoke","dApp","payment","call","function","args","type","value","testinvoke_waves","testsimpleinvoke","testInvokeWithPayment","testInvokeWithTwoPayments","SignerLoginElement","props","state","login","bind","this","testlogin","then","res","rej","setState","provider","_options","toString","currentProvider","_clientUrl","onClick","React","Component","TestButtonsComponent","buttonName","testFunction","SignButtonWithParams","status","clickHandle","handleChange","event","target","name","catch","console","log","message","status_text","Array","isArray","id","style","width","onChange","SignButtonComponent","ConfigElement","currentWxUrl","currentNodeUrl","setProviders","changeSigner","PageComponent","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d9a21ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Signer } from \"@waves/signer\";\r\nimport { ProviderWeb } from \"@waves.exchange/provider-web\";\r\nimport { ProviderCloud } from \"@waves.exchange/provider-cloud\";\r\nimport { ProviderKeeper } from \"@waves/provider-keeper\";\r\nimport { ProviderLedger } from \"@waves/provider-ledger\";\r\nimport { ProviderMetamask} from \"@waves/provider-metamask\";\r\n\r\nvar config = {\r\n  wxUrl: \"https://testnet.waves.exchange\",\r\n  nodeUrl: \"https://nodes-testnet.wavesnodes.com\",\r\n};\r\n\r\nvar currentProviderWeb;\r\nvar currentProviderCloud;\r\nvar currentProviderKeeper;\r\nvar currentProviderLedger;\r\nvar currentProviderMetamask;\r\n\r\nvar signerWeb;\r\nvar signerCloud;\r\nvar signerKeeper;\r\nvar signerLedger;\r\nvar signerMetamask;\r\n\r\nchangeProviderUrl(config.wxUrl, config.nodeUrl);\r\n\r\nfunction changeProviderUrl(wxUrl, nodeUrl) {\r\n  config.wxUrl = wxUrl;\r\n  config.nodeUrl = nodeUrl;\r\n\r\n  currentProviderWeb    = new ProviderWeb(wxUrl + \"/signer\");\r\n  currentProviderCloud  = new ProviderCloud(wxUrl + \"/signer-cloud\");\r\n  currentProviderKeeper = new ProviderKeeper();\r\n  currentProviderLedger = new ProviderLedger();\r\n  currentProviderMetamask = new ProviderMetamask({\r\n       wavesConfig: {\r\n           nodeUrl: config.nodeUrl,\r\n           chainId: 'T'.charCodeAt(0)\r\n       }\r\n  });\r\n\r\n  signerWeb = new Signer({\r\n    NODE_URL: config.nodeUrl,\r\n  });\r\n\r\n  signerCloud = new Signer({\r\n    NODE_URL: config.nodeUrl,\r\n  });\r\n\r\n  signerKeeper = new Signer({\r\n    NODE_URL: config.nodeUrl,\r\n  });\r\n\r\n  signerLedger = new Signer({\r\n    NODE_URL: config.nodeUrl,\r\n  });\r\n\r\n  signerMetamask = new Signer({\r\n    NODE_URL: config.nodeUrl,\r\n  });\r\n\r\n  signerWeb.setProvider(currentProviderWeb);\r\n  signerCloud.setProvider(currentProviderCloud);\r\n  signerKeeper.setProvider(currentProviderKeeper);\r\n  signerLedger.setProvider(currentProviderLedger);\r\n  signerMetamask.setProvider(currentProviderMetamask);\r\n}\r\n\r\nfunction testlogin(signer) {\r\n  return signer.login();\r\n}\r\n\r\nfunction sendToAddress(signer, params) {\r\n  return signer\r\n    .transfer({\r\n      amount: params.amount,\r\n      recipient: params.address,\r\n      assetId: params.assetId,\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testsend(signer) {\r\n  return signer\r\n    .transfer({\r\n      amount: 100,\r\n      recipient: \"alias:T:merry\",\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testsend_btc(signer) {\r\n  return signer\r\n    .transfer({\r\n      amount: 1,\r\n      assetId: \"DWgwcZTMhSvnyYCoWLRUXXSH1RSkzThXLJhww9gwkqdn\",\r\n      recipient: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testsend_waves(signer) {\r\n  return signer\r\n    .transfer({\r\n      assetId: \"WAVES\",\r\n      amount: 101,\r\n      recipient: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      fee: 100001,\r\n      feeAssetId: \"WAVES\",\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testinvoke(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      payment: [\r\n        {\r\n          assetId: null,\r\n          amount: 5,\r\n        },\r\n        {\r\n          assetId: \"25FEqEjRkqK6yCkiT7Lz6SAYz7gUFCtxfCChnrVFD5AT\",\r\n          amount: 4,\r\n        },\r\n        {\r\n          assetId: \"5Sh9KghfkZyhjwuodovDhB6PghDUGBHiAPZ4MkrPgKtX\",\r\n          amount: 3,\r\n        },\r\n        {\r\n          assetId: \"DWgwcZTMhSvnyYCoWLRUXXSH1RSkzThXLJhww9gwkqdn\",\r\n          amount: 2,\r\n        },\r\n        {\r\n          assetId: \"EmcmfM27TPaemhuREZGD8WLvsuLCdqx8WovMrDQKbXS1\",\r\n          amount: 1,\r\n        },\r\n      ],\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testinvoke_waves(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      fee: 500001,\r\n      feeAssetId: \"WAVES\",\r\n      payment: [\r\n        {\r\n          assetId: \"WAVES\",\r\n          amount: 1,\r\n        },\r\n        {\r\n          assetId: \"25FEqEjRkqK6yCkiT7Lz6SAYz7gUFCtxfCChnrVFD5AT\",\r\n          amount: 2,\r\n        },\r\n        {\r\n          assetId: \"5Sh9KghfkZyhjwuodovDhB6PghDUGBHiAPZ4MkrPgKtX\",\r\n          amount: 3,\r\n        },\r\n      ],\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testsimpleinvoke(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testInvokeWithPayment(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      payment: [\r\n        {\r\n          assetId: \"WAVES\",\r\n          amount: 1,\r\n        },\r\n      ],\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nfunction testInvokeWithTwoPayments(signer) {\r\n  return signer\r\n    .invoke({\r\n      dApp: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      payment: [\r\n        {\r\n          assetId: \"WAVES\",\r\n          amount: 1,\r\n        },\r\n        {\r\n          assetId: \"DWgwcZTMhSvnyYCoWLRUXXSH1RSkzThXLJhww9gwkqdn\",\r\n          amount: 2,\r\n        },\r\n      ],\r\n      call: {\r\n        function: \"foo\",\r\n        args: [\r\n          {\r\n            type: \"string\",\r\n            value: \"Hello, world!\",\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    .broadcast();\r\n}\r\n\r\nclass SignerLoginElement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  login() {\r\n    var signer = this.props.signer;\r\n    if (signer !== \"\") {\r\n      testlogin(signer).then((res, rej) => {\r\n        this.setState({\r\n          address: res.address,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4> Provider {this.props.provider} </h4>\r\n        <div> Address: {this.state.address} </div>\r\n        <div> NODE_URL: {this.props.signer._options.NODE_URL.toString()} </div>\r\n        <div> PROVIDER_URL: {\r\n            this.props.signer.currentProvider._clientUrl ?\r\n            this.props.signer.currentProvider._clientUrl.toString() : \"\"}\r\n        </div>\r\n        <button onClick={this.login}> Login {this.props.provider} </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TestButtonsComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Transfer\"\r\n          testFunction={testsend}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Transfer BTC\"\r\n          testFunction={testsend_btc}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Transfer with WAVES as AssetID\"\r\n          testFunction={testsend_waves}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke\"\r\n          testFunction={testinvoke}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke with WAVES as AssetID\"\r\n          testFunction={testinvoke_waves}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke without payments\"\r\n          testFunction={testsimpleinvoke}\r\n        />\r\n        <br />\r\n        <SignButtonWithParams\r\n          signer={this.props.signer}\r\n          buttonName=\"TransferTX\"\r\n          testFunction={sendToAddress}\r\n        />\r\n        <br />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke with 1 payment (WAVES)\"\r\n          testFunction={testInvokeWithPayment}\r\n        />\r\n        <SignButtonComponent\r\n          signer={this.props.signer}\r\n          buttonName=\"Invoke with 2 payments (WAVES, BTC)\"\r\n          testFunction={testInvokeWithTwoPayments}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignButtonWithParams extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: \"\",\r\n      amount: \"1\",\r\n      address: \"3N4ziXSMRverXyxHDUKKMR9MHXnB3TyU3Yh\",\r\n      assetId: \"WAVES\",\r\n    }\r\n\r\n    this.clickHandle = this.clickHandle.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  clickHandle() {\r\n    return this.props\r\n      .testFunction(this.props.signer, {amount: this.state.amount, address: this.state.address, assetId: this.state.assetId})\r\n      .catch((rej) => {\r\n        console.log(rej); // For debugging in console\r\n\r\n        this.setState({\r\n          status: rej.message ? rej.message.toString() : rej.toString(),\r\n        });\r\n      })\r\n      .then((res, rej) => {\r\n        if (res) {\r\n          console.log(res); // For debugging in console\r\n\r\n          var status_text = \"\";\r\n          if (Array.isArray(res)) {\r\n            for (var tx of res) {\r\n              status_text += tx.id.toString() + \"\\n\";\r\n            }\r\n          } else {\r\n            status_text = res.id.toString() + \"\\n\";\r\n          }\r\n\r\n          this.setState({\r\n            status: status_text,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          Address:\r\n          <input\r\n            name=\"address\"\r\n            type=\"text\"\r\n            style={{\r\n              width: 300,\r\n            }}\r\n            value={this.state.address}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          Amount:\r\n          <input\r\n            name=\"amount\"\r\n            type=\"text\"\r\n            style={{\r\n              width: 300,\r\n            }}\r\n            value={this.state.amount}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          AssetId:\r\n          <input\r\n            name=\"assetId\"\r\n            type=\"text\"\r\n            style={{\r\n              width: 300,\r\n            }}\r\n            value={this.state.assetId}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <button onClick={this.clickHandle}> {this.props.buttonName} </button>\r\n        <div> {this.state.status} </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignButtonComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: \"\",\r\n    };\r\n\r\n    this.clickHandle = this.clickHandle.bind(this);\r\n  }\r\n\r\n  clickHandle() {\r\n    return this.props\r\n      .testFunction(this.props.signer)\r\n      .catch((rej) => {\r\n        console.log(rej); // For debugging in console\r\n\r\n        this.setState({\r\n          status: rej.message ? rej.message.toString() : rej.toString(),\r\n        });\r\n      })\r\n      .then((res, rej) => {\r\n        if (res) {\r\n          console.log(res); // For debugging in console\r\n\r\n          var status_text = \"\";\r\n          if (Array.isArray(res)) {\r\n            for (var tx of res) {\r\n              status_text += tx.id.toString() + \"\\n\";\r\n            }\r\n          } else {\r\n            status_text = res.id.toString() + \"\\n\";\r\n          }\r\n\r\n          this.setState({\r\n            status: status_text,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.clickHandle}> {this.props.buttonName} </button>\r\n        <div> {this.state.status} </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConfigElement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      wxUrl: config.wxUrl,\r\n      nodeUrl: config.nodeUrl,\r\n      currentWxUrl: config.wxUrl,\r\n      currentNodeUrl: config.nodeUrl,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setProviders = this.setProviders.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  setProviders(event) {\r\n    changeProviderUrl(this.state.wxUrl, this.state.nodeUrl);\r\n\r\n    this.props.changeSigner();\r\n\r\n    this.setState({\r\n      currentWxUrl: this.state.wxUrl,\r\n      currentNodeUrl: this.state.nodeUrl\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4> Current WX: {this.state.currentWxUrl} </h4>\r\n        <h4> Current Node: {this.state.currentNodeUrl} </h4>\r\n        <div>\r\n          WX URL:\r\n          <input\r\n            name=\"wxUrl\"\r\n            type=\"text\"\r\n            style={{\r\n              width: 300,\r\n            }}\r\n            value={this.state.wxUrl}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          NODE URL:\r\n          <input\r\n            name=\"nodeUrl\"\r\n            type=\"text\"\r\n            style={{\r\n              width: 300,\r\n            }}\r\n            value={this.state.nodeUrl}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <button onClick={this.setProviders}> Set </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PageComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signerWeb: signerWeb,\r\n      signerCloud: signerCloud,\r\n      signerKeeper: signerKeeper,\r\n      signerLedger: signerLedger,\r\n      signerMetamask: signerMetamask,\r\n    };\r\n\r\n    this.changeSigner = this.changeSigner.bind(this);\r\n  }\r\n\r\n  changeSigner(event) {\r\n    this.setState({\r\n      signerWeb: signerWeb,\r\n      signerCloud: signerCloud,\r\n      signerKeeper: signerKeeper,\r\n      signerLedger: signerLedger,\r\n      signerMetamask: signerMetamask,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ConfigElement config={config} changeSigner={this.changeSigner} />\r\n        <br />\r\n        <SignerLoginElement\r\n          provider=\"WEB\" \r\n          signer={this.state.signerWeb}\r\n        />\r\n        <br />\r\n        <TestButtonsComponent signer={this.state.signerWeb} /> <br />\r\n        <SignerLoginElement \r\n          provider=\"CLOUD\" \r\n          signer={this.state.signerCloud}\r\n        />\r\n        <br />\r\n        <TestButtonsComponent signer={this.state.signerCloud} /> <br />\r\n        <SignerLoginElement\r\n          provider=\"KEEPER\"\r\n          signer={this.state.signerKeeper}\r\n        />\r\n        <br />\r\n        <TestButtonsComponent signer={this.state.signerKeeper} /> <br />\r\n        <SignerLoginElement\r\n          provider=\"LEDGER\"\r\n          signer={this.state.signerLedger}\r\n        />\r\n        <br />\r\n        <TestButtonsComponent signer={this.state.signerLedger} /> <br />\r\n        <SignerLoginElement\r\n          provider=\"METAMASK\"\r\n          signer={this.state.signerMetamask}\r\n        />\r\n        <br />\r\n        <TestButtonsComponent signer={this.state.signerMetamask} /> <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <PageComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}